一、方法的重载（Overload）：
 1）发生在一个类中，方法名字相同，参数列表不同，方法体不同
 2）编译器会在编译时根据方法的签名自动调用相匹配的方法
二、构造方法：也称为构造函数、构造器、构建器
 1）给成员变量赋初值
 2）与类同名，没有返回值类型
 3）在创建（new）对象时被自动调用
 4）若自己不写构造方法，则编译器默认一个无参构造方法
    若自己写了构造方法，则编译器不再默认提供
 5）构造方法可以重载
三、this：指代当前对象，哪个对象调用方法它指的就是哪个对象
	只能用在方法中，方法中访问成员变量之前默认有个this
    this的用法：
	1）this.成员变量名-----------------访问成员变量
	2）this.方法名（）-----------------调用方法（一般不用）
	3) this.()----------------------调用构造方法
四、null：空，没有指向任何对象
	若引用的值为null，则该引用不能再进行任何操作了
 	若操作则发生NullPointerException空指针异常
五、引用类型变量划等号：
 1）指向同一个对象
 2）通过一个引用对数据的修改会影响另一个引用对数据的访问
	（类似房子和钥匙的关系）
    基本类型变量划等号：
 1）赋值
 2）对一个变量的修改不会影响另一个变量的访问
    （类似身份证复印件）



零、方法的签名：方法名+参数列表
一、方法的重载
 1）同一个类中的方法，方法名称相同，参数列表不同，方法体不同
 2）编译器会根据方法的签名和参数自动匹配与之相符的方法
二、构造方法：也称为构造函数、构造器、构建器
 1）名称与类相同，没有返回值
 2）构造方法可以被重载
 3）若没有写构造方法，则系统默认赋予一个无参构造方法
    若写了构造方法，则系统不会默认提供
 4）创建（new）对象时被自动调用
 5）给成员变量赋初值
三、this：指代当前对象，哪个对象调用方法它就指向哪个对象
	只能用在方法中，方法中的访问成员变量前默认有个this
    this.成员变量名-----------------------访问成员变量	
    this.方法名（）-----------------------调用方法（一般不用）
    this.()-------------------------------调用构造方法
四、null:空，没有指向任何对象
    若引用的对象为null，则不能被进行操作了
    若要操作该对象，出现NullPointerExceotion空指针异常
五、引用类型划等号
  1.指向同一个对象
  2.通过一个引用对数据的修改会影响另一个引用的访问
	（类似房子和钥匙）
    基本类型划等号
  1.赋值
  2.一个变量的修改不会影响到另一个变量的访问
 	（类似身份证复印件）

零、方法的签名：方法名+参数列表
一、方法重载
 1）发生在一个类中，与类的名字相同，参数列表不同，方法体不同
 2）编译器在编译时会自动调用与之相符的方法
二、构造方法
 1）给成员变量赋初值
 2）方法名与类相同，无返回值类型
 3）创建（new）对象时会自动调用构造方法
 4）若没有写构造方法，则系统会默认提供一个无参构造方法
    若写了构造方法，则系统不会再默认提供
 5）构造方法可以被重载
三、this：指代被引用的对象，哪个对象引用它就指向哪个
	只能用在方法中，在被引用时默认在成员变量前加this
    this.成员变量名----------------------访问成员变量
    this.方法名（）----------------------调用方法（一般不用）
    this.（）----------------------------调用构造方法

四、null：空，无指向对象
    1.若访问对象为null，则无法对对象进行操作
    2.若要操作该对象，则出现NullPointerExceotion空指针异常
五、引用类型划等号
   指向同一个对象
  若一个引用修改数据，会影响到另一个引用的访问
    基本数据类型划等号
  1.赋值
  2.一个对象的修改不会影响到另一个对象的访问




























